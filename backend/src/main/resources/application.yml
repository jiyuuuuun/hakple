server:
  port: 8090
  servlet:
    session:
      persistent: false    # 세션 지속성 비활성화
      store-dir: /tmp      # 임시 디렉토리 지정 (필요시)
      cookie:
        secure: false      # HTTPS 사용 여부에 따라 설정
        http-only: true    # 자바스크립트에서 쿠키 접근 방지

spring:
  main:
    allow-bean-definition-overriding: true
  mvc:
    static-path-pattern: /uploads/** # 정적 파일 접근 경로 설정
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
      enabled: true
  session:
    store-type: none       # 기본 세션 저장소 사용 (in-memory)
    timeout: 1800          # 세션 타임아웃 30분
  output:
    ansi:
      enabled: ALWAYS
  profiles:
    active: dev
    include: secret
  datasource:
    url: jdbc:mysql://localhost:3307/hakpledb
    username: testuser
    password: testpw
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      data-source-properties:
        maxAllowedPacket: 134217728
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
  config:
    import:
      - classpath:application-secret.yml
  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: ON_SECRET
            scope: profile_nickname, profile_image
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: "${custom.site.backUrl}/{action}/oauth2/code/{registrationId}"
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  docker:
    compose:
      file: docker-compose.yml  # 파일 경로 명시
      lifecycle-management: start-and-stop # Docker Compose 라이프사이클 관리 활성화
      enabled: true
      skip-in-tests: false # 테스트에서도 Docker Compose 실행
      start-timeout: 120s # 시작 타임아웃 늘림
  data:
    redis:
      host: localhost # 컨테이너 이름으로 설정
      port: 6379
      connect-timeout: 10000 # 연결 타임아웃 10초
  web:
    resources:
      static-locations:
        - file:${app.upload.temp-dir}
        - file:${app.upload.prod-dir}
        - classpath:/static/

logging:
  level:
    root: INFO                    # 전체 기본 로그는 INFO로
    com.ll.blog: DEBUG           # 내 패키지는 DEBUG로 (서비스 흐름 확인용)
    org.hibernate.SQL: DEBUG     # SQL 쿼리만 출력
    org.hibernate.type.descriptor.sql: OFF  # 바인딩 값 숨김
    org.hibernate.orm.jdbc.bind: OFF
    org.hibernate.orm.jdbc.extract: OFF
    org.springframework.transaction.interceptor: INFO  # 트랜잭션 시작/커밋 정도만


custom:
  dev:
    cookieDomain: localhost
    frontUrl: "http://${custom.dev.cookieDomain}:3000"
    backUrl: "http://${custom.dev.cookieDomain}:${server.port}"
  prod:
    cookieDomain: hakple.site
    frontUrl: "https://www.${custom.prod.cookieDomain}"
    backUrl: "https://api.${custom.prod.cookieDomain}"
  site:
    name: "BLOG DEV"
    cookieDomain: "${custom.dev.cookieDomain}"
    frontUrl: "${custom.dev.frontUrl}"
    backUrl: "${custom.dev.backUrl}"

#일단 임시로 지정함
jwt:
  secretKey: 127393911531540290533352supercalifragilisticexpialidocious
  refreshKey: 127393911531540290533352supercalifragilisticexpialidocious

springdoc:
  swagger-ui:
    path: /swagger-ui.html # Swagger UI 접근 경로
  api-docs:
    path: /v3/api-docs # OpenAPI 문서 경로

file:
  upload-dir: ${user.home}/hakple-uploads # 사용자 홈 디렉토리에 파일 저장

app:
  upload:
    temp-dir: ${user.dir}/uploads/temp
    prod-dir: ${user.dir}/uploads/prodImg




 